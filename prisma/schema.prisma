generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid()) @db.Uuid
  email        String   @unique
  username     String   @unique
  passwordHash String
  firstName    String?
  lastName     String?
  status       Boolean  @default(true)
  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime @default(now()) @updatedAt() @db.Timestamptz(6)
  archived     Boolean  @default(false)
  urls         Url[]    @relation(name: "createdBy")
  Url          Url[]    @relation(name: "updatedBy")

  @@map("users")
}

model Url {
  id           String   @id @default(uuid()) @db.Uuid
  longUrl      String
  shortUrl     String   @unique
  title        String?
  shortId      String
  customDomain String?
  archived     Boolean  @default(false)
  clicks       Int      @default(0)
  status       Boolean  @default(true)
  qrCode       String?
  userId       String?  @db.Uuid
  createdBy    String?  @db.Uuid
  updatedBy    String?  @db.Uuid
  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime @default(now()) @updatedAt() @db.Timestamptz(6)
  creator      User?    @relation(name: "createdBy", fields: [createdBy], references: [id])
  updator      User?    @relation(name: "updatedBy", fields: [updatedBy], references: [id])
  tags         Tag[]

  @@map("urls")
}

model Tag {
  id   String @id @default(uuid()) @db.Uuid
  name String @unique
  urls Url[]

  @@map("tags")
}
